!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/;"	extras:pseudo
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/;"	extras:pseudo
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/;"	extras:pseudo
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/;"	extras:pseudo
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/;"	extras:pseudo
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/;"	extras:pseudo
!_TAG_PROC_CWD	/home/user/mbz/	//;"	extras:pseudo
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//;"	extras:pseudo
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/;"	extras:pseudo
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/;"	extras:pseudo
!_TAG_PROGRAM_VERSION	5.9.0	//;"	extras:pseudo
Callbacks	tls.cpp	/^Callbacks::Callbacks(uint8_t *arg_buffer, size_t arg_buffer_size, struct io_uring *arg_ring, int/;"	kind:function	line:37	language:C++	scope:class:Callbacks	signature:(uint8_t * arg_buffer,size_t arg_buffer_size,struct io_uring * arg_ring,int arg_socket_fd)	roles:def	end:40
Callbacks	tls.hpp	/^		Callbacks(uint8_t *buffer, size_t buffer_size, struct io_uring *arg_ring, int socket_fd);$/;"	kind:prototype	line:57	language:C++	scope:class:Callbacks	access:public	signature:(uint8_t * buffer,size_t buffer_size,struct io_uring * arg_ring,int socket_fd)	roles:def	end:57
Callbacks	tls.hpp	/^class Callbacks : public Botan::TLS::Callbacks \/\/ NOLINT$/;"	kind:class	line:48	language:C++	inherits:Botan::TLS::Callbacks	roles:def	end:62
Callbacks::Callbacks	tls.cpp	/^Callbacks::Callbacks(uint8_t *arg_buffer, size_t arg_buffer_size, struct io_uring *arg_ring, int/;"	kind:function	line:37	language:C++	scope:class:Callbacks	signature:(uint8_t * arg_buffer,size_t arg_buffer_size,struct io_uring * arg_ring,int arg_socket_fd)	roles:def	extras:qualified
Callbacks::Callbacks	tls.hpp	/^		Callbacks(uint8_t *buffer, size_t buffer_size, struct io_uring *arg_ring, int socket_fd);$/;"	kind:prototype	line:57	language:C++	scope:class:Callbacks	access:public	signature:(uint8_t * buffer,size_t buffer_size,struct io_uring * arg_ring,int socket_fd)	roles:def	extras:qualified
Callbacks::buffer	tls.hpp	/^		uint8_t         *buffer;$/;"	kind:member	line:52	language:C++	scope:class:Callbacks	typeref:typename:uint8_t *	access:private	roles:def	extras:qualified
Callbacks::buffer_size	tls.hpp	/^		size_t           buffer_size;$/;"	kind:member	line:51	language:C++	scope:class:Callbacks	typeref:typename:size_t	access:private	roles:def	extras:qualified
Callbacks::ring	tls.hpp	/^		struct io_uring *ring;$/;"	kind:member	line:53	language:C++	scope:class:Callbacks	typeref:struct:io_uring *	access:private	roles:def	extras:qualified
Callbacks::socket_fd	tls.hpp	/^		int              socket_fd;$/;"	kind:member	line:54	language:C++	scope:class:Callbacks	typeref:typename:int	access:private	roles:def	extras:qualified
Callbacks::tls_alert	tls.cpp	/^void Callbacks::tls_alert(Botan::TLS::Alert alert)$/;"	kind:function	line:63	language:C++	scope:class:Callbacks	typeref:typename:void	signature:(Botan::TLS::Alert alert)	roles:def	extras:qualified
Callbacks::tls_alert	tls.hpp	/^		void tls_alert(Botan::TLS::Alert alert) override;$/;"	kind:prototype	line:61	language:C++	scope:class:Callbacks	typeref:typename:void	access:public	signature:(Botan::TLS::Alert alert)	roles:def	extras:qualified	properties:override,virtual
Callbacks::tls_emit_data	tls.cpp	/^void Callbacks::tls_emit_data(std::span<uint8_t const> data)$/;"	kind:function	line:42	language:C++	scope:class:Callbacks	typeref:typename:void	signature:(std::span<uint8_t const> data)	roles:def	extras:qualified
Callbacks::tls_emit_data	tls.hpp	/^		void tls_emit_data(std::span<uint8_t const> data) override;$/;"	kind:prototype	line:59	language:C++	scope:class:Callbacks	typeref:typename:void	access:public	signature:(std::span<uint8_t const> data)	roles:def	extras:qualified	properties:override,virtual
Callbacks::tls_record_received	tls.cpp	/^void Callbacks::tls_record_received(uint64_t seq_no, std::span<uint8_t const> data)$/;"	kind:function	line:56	language:C++	scope:class:Callbacks	typeref:typename:void	signature:(uint64_t seq_no,std::span<uint8_t const> data)	roles:def	extras:qualified
Callbacks::tls_record_received	tls.hpp	/^		void tls_record_received(uint64_t seq_no, std::span<uint8_t const> data) override;$/;"	kind:prototype	line:60	language:C++	scope:class:Callbacks	typeref:typename:void	access:public	signature:(uint64_t seq_no,std::span<uint8_t const> data)	roles:def	extras:qualified	properties:override,virtual
FD_TABLE_SIZE	start_server.hpp	/^#define FD_TABLE_SIZE /;"	kind:macro	line:32	language:C++	roles:def	end:32	macrodef:50000
REGISTERED_BUFFER_SIZE	start_server.hpp	/^#define REGISTERED_BUFFER_SIZE /;"	kind:macro	line:33	language:C++	roles:def	end:33	macrodef:100000000
Server_Credentials	tls.cpp	/^Server_Credentials::Server_Credentials()$/;"	kind:function	line:78	language:C++	scope:class:Server_Credentials	signature:()	roles:def	end:83
Server_Credentials	tls.hpp	/^		Server_Credentials();$/;"	kind:prototype	line:80	language:C++	scope:class:Server_Credentials	access:public	signature:()	roles:def	end:80
Server_Credentials	tls.hpp	/^class Server_Credentials : public Botan::Credentials_Manager$/;"	kind:class	line:73	language:C++	inherits:Botan::Credentials_Manager	roles:def	end:93
Server_Credentials::Server_Credentials	tls.cpp	/^Server_Credentials::Server_Credentials()$/;"	kind:function	line:78	language:C++	scope:class:Server_Credentials	signature:()	roles:def	extras:qualified
Server_Credentials::Server_Credentials	tls.hpp	/^		Server_Credentials();$/;"	kind:prototype	line:80	language:C++	scope:class:Server_Credentials	access:public	signature:()	roles:def	extras:qualified
Server_Credentials::cert_chain	tls.cpp	/^	Server_Credentials::cert_chain(std::vector<std::string> const                &cert_key_types,$/;"	kind:function	line:96	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::X509_Certificate>	signature:(std::vector<std::string> const & cert_key_types,std::vector<Botan::AlgorithmIdentifier> const & cert_signature_schemes,std::string const & type,std::string const & context)	roles:def	extras:qualified
Server_Credentials::cert_chain	tls.hpp	/^		std::vector<Botan::X509_Certificate>    cert_chain(std::vector<std::string> const &cert_key_ty/;"	kind:prototype	line:85	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::X509_Certificate>	access:public	signature:(std::vector<std::string> const & cert_key_types,std::vector<Botan::AlgorithmIdentifier> const & cert_signature_schemes,std::string const & type,std::string const & context)	roles:def	extras:qualified	properties:override,virtual
Server_Credentials::m_cert	tls.hpp	/^		Botan::X509_Certificate             m_cert;$/;"	kind:member	line:77	language:C++	scope:class:Server_Credentials	typeref:typename:Botan::X509_Certificate	access:private	roles:def	extras:qualified
Server_Credentials::m_key	tls.hpp	/^		std::shared_ptr<Botan::Private_Key> m_key;$/;"	kind:member	line:76	language:C++	scope:class:Server_Credentials	typeref:typename:std::shared_ptr<Botan::Private_Key>	access:private	roles:def	extras:qualified
Server_Credentials::private_key_for	tls.cpp	/^std::shared_ptr<Botan::Private_Key> Server_Credentials::private_key_for(Botan::X509_Certificate /;"	kind:function	line:106	language:C++	scope:class:Server_Credentials	typeref:typename:std::shared_ptr<Botan::Private_Key>	signature:(Botan::X509_Certificate const & cert,std::string const & type,std::string const & context)	roles:def	extras:qualified
Server_Credentials::private_key_for	tls.hpp	/^		std::shared_ptr<Botan::Private_Key> private_key_for(Botan::X509_Certificate const &cert,$/;"	kind:prototype	line:89	language:C++	scope:class:Server_Credentials	typeref:typename:std::shared_ptr<Botan::Private_Key>	access:public	signature:(Botan::X509_Certificate const & cert,std::string const & type,std::string const & context)	roles:def	extras:qualified	properties:override,virtual
Server_Credentials::trusted_certificate_authorities	tls.cpp	/^std::vector<Botan::Certificate_Store *> Server_Credentials::trusted_certificate_authorities(std:/;"	kind:function	line:85	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::Certificate_Store * >	signature:(std::string const & type,std::string const & context)	roles:def	extras:qualified
Server_Credentials::trusted_certificate_authorities	tls.hpp	/^		std::vector<Botan::Certificate_Store *> trusted_certificate_authorities(std::string const &typ/;"	kind:prototype	line:83	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::Certificate_Store * >	access:public	signature:(std::string const & type,std::string const & context)	roles:def	extras:qualified	properties:override,virtual
__anona36d8fae010d	helpers.hpp	/^void                   check_for_errors_worker(char const *str, t_s_worker_id);$/;"	kind:parameter	line:35	language:C++	scope:prototype:check_for_errors_worker	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope,anonymous	nth:1
addr	main.cpp	/^	struct in6_addr addr;$/;"	kind:local	line:54	language:C++	scope:function:get_in6_addr	typeref:struct:in6_addr	file:	roles:def	extras:fileScope	end:54
addr	main.cpp	/^	struct in_addr addr;$/;"	kind:local	line:44	language:C++	scope:function:get_in_addr	typeref:struct:in_addr	file:	roles:def	extras:fileScope	end:44
addr_size	start_server.cpp	/^	static socklen_t                    addr_size = sizeof(sockaddr_in6);$/;"	kind:local	line:55	language:C++	scope:function:issue_accept_if_needed	typeref:typename:socklen_t	file:	roles:def	extras:fileScope	end:55	properties:static
alert	tls.cpp	/^void Callbacks::tls_alert(Botan::TLS::Alert alert)$/;"	kind:parameter	line:63	language:C++	scope:function:Callbacks::tls_alert	typeref:typename:Botan::TLS::Alert	file:	roles:def	extras:fileScope	nth:0
alert	tls.hpp	/^		void tls_alert(Botan::TLS::Alert alert) override;$/;"	kind:parameter	line:61	language:C++	scope:prototype:Callbacks::tls_alert	typeref:typename:Botan::TLS::Alert	file:	roles:def	extras:fileScope	nth:0
arg_buffer	tls.cpp	/^Callbacks::Callbacks(uint8_t *arg_buffer, size_t arg_buffer_size, struct io_uring *arg_ring, int/;"	kind:parameter	line:37	language:C++	scope:function:Callbacks::Callbacks	typeref:typename:uint8_t *	file:	roles:def	extras:fileScope	nth:0
arg_buffer	tls.hpp	/^Botan::TLS::Server    *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t arg_buffer,/;"	kind:parameter	line:104	language:C++	scope:prototype:init_tls_engine	typeref:typename:uint8_t	file:	roles:def	extras:fileScope	nth:1
arg_buffer_size	tls.cpp	/^Callbacks::Callbacks(uint8_t *arg_buffer, size_t arg_buffer_size, struct io_uring *arg_ring, int/;"	kind:parameter	line:37	language:C++	scope:function:Callbacks::Callbacks	typeref:typename:size_t	file:	roles:def	extras:fileScope	nth:1
arg_ring	tls.cpp	/^									struct io_uring *arg_ring, int socket_fd)$/;"	kind:parameter	line:145	language:C++	scope:function:init_tls_engine	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:3
arg_ring	tls.cpp	/^Callbacks::Callbacks(uint8_t *arg_buffer, size_t arg_buffer_size, struct io_uring *arg_ring, int/;"	kind:parameter	line:37	language:C++	scope:function:Callbacks::Callbacks	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:2
arg_ring	tls.hpp	/^									   struct io_uring *arg_ring, int socket_fd);$/;"	kind:parameter	line:105	language:C++	scope:prototype:init_tls_engine	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:3
arg_ring	tls.hpp	/^		Callbacks(uint8_t *buffer, size_t buffer_size, struct io_uring *arg_ring, int socket_fd);$/;"	kind:parameter	line:57	language:C++	scope:prototype:Callbacks::Callbacks	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:2
arg_socket_fd	tls.cpp	/^Callbacks::Callbacks(uint8_t *arg_buffer, size_t arg_buffer_size, struct io_uring *arg_ring, int/;"	kind:parameter	line:37	language:C++	scope:function:Callbacks::Callbacks	typeref:typename:int	file:	roles:def	extras:fileScope	nth:3
arpa/inet.h	connection_accepted.cpp	/^#include <arpa\/inet.h>/;"	kind:header	line:15	language:C++	roles:system	extras:reference
arpa/inet.h	main.cpp	/^#include <arpa\/inet.h>/;"	kind:header	line:13	language:C++	roles:system	extras:reference
available	get_free_connection_socket_index.cpp	/^static unsigned int available;$/;"	kind:variable	line:33	language:C++	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	end:33	properties:static
bind_addres	main.cpp	/^	struct sockaddr_in6 bind_addres = {$/;"	kind:local	line:66	language:C++	scope:function:lauch_workers_for_port	typeref:struct:sockaddr_in6	file:	roles:def	extras:fileScope	end:67
botan/auto_rng.h	tls.hpp	/^#include <botan\/auto_rng.h>/;"	kind:header	line:15	language:C++	roles:system	extras:reference
botan/certstor.h	tls.hpp	/^#include <botan\/certstor.h>/;"	kind:header	line:16	language:C++	roles:system	extras:reference
botan/pk_keys.h	tls.hpp	/^#include <botan\/pk_keys.h>/;"	kind:header	line:17	language:C++	roles:system	extras:reference
botan/pkcs8.h	tls.hpp	/^#include <botan\/pkcs8.h>/;"	kind:header	line:18	language:C++	roles:system	extras:reference
botan/rng.h	start_server.cpp	/^#include "botan\/rng.h"/;"	kind:header	line:13	language:C++	roles:local	extras:reference
botan/tls.h	tls.hpp	/^#include <botan\/tls.h>/;"	kind:header	line:19	language:C++	roles:system	extras:reference
botan/tls_callbacks.h	start_server.cpp	/^#include "botan\/tls_callbacks.h"/;"	kind:header	line:14	language:C++	roles:local	extras:reference
botan/tls_policy.h	start_server.cpp	/^#include "botan\/tls_policy.h"/;"	kind:header	line:15	language:C++	roles:local	extras:reference
botan/tls_server.h	start_server.cpp	/^#include "botan\/tls_server.h"/;"	kind:header	line:16	language:C++	roles:local	extras:reference
botan/tls_session_manager.h	start_server.cpp	/^#include "botan\/tls_session_manager.h"/;"	kind:header	line:17	language:C++	roles:local	extras:reference
botan/tls_session_manager_memory.h	start_server.cpp	/^#include "botan\/tls_session_manager_memory.h"/;"	kind:header	line:18	language:C++	roles:local	extras:reference
botan/tls_session_manager_noop.h	start_server.cpp	/^#include "botan\/tls_session_manager_noop.h"/;"	kind:header	line:19	language:C++	roles:local	extras:reference
buffer	connection_accepted.hpp	/^		uint8_t               *buffer;$/;"	kind:member	line:51	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:uint8_t *	access:public	roles:def	end:51
buffer	connection_accepted.hpp	/^		uint8_t            *buffer;$/;"	kind:member	line:41	language:C++	scope:struct:s_connection_data	typeref:typename:uint8_t *	access:public	roles:def	end:41
buffer	tls.cpp	/^Botan::TLS::Server *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t buffer, size_t/;"	kind:parameter	line:144	language:C++	scope:function:init_tls_engine	typeref:typename:uint8_t	file:	roles:def	extras:fileScope	nth:1
buffer	tls.hpp	/^		Callbacks(uint8_t *buffer, size_t buffer_size, struct io_uring *arg_ring, int socket_fd);$/;"	kind:parameter	line:57	language:C++	scope:prototype:Callbacks::Callbacks	typeref:typename:uint8_t *	file:	roles:def	extras:fileScope	nth:0
buffer	tls.hpp	/^		uint8_t         *buffer;$/;"	kind:member	line:52	language:C++	scope:class:Callbacks	typeref:typename:uint8_t *	access:private	roles:def	end:52
buffer_size	connection_accepted.hpp	/^		size_t                 buffer_size;$/;"	kind:member	line:52	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:size_t	access:public	roles:def	end:52
buffer_size	connection_accepted.hpp	/^		size_t              buffer_size;$/;"	kind:member	line:42	language:C++	scope:struct:s_connection_data	typeref:typename:size_t	access:public	roles:def	end:42
buffer_size	tls.cpp	/^Botan::TLS::Server *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t buffer, size_t/;"	kind:parameter	line:144	language:C++	scope:function:init_tls_engine	typeref:typename:size_t	file:	roles:def	extras:fileScope	nth:2
buffer_size	tls.hpp	/^		Callbacks(uint8_t *buffer, size_t buffer_size, struct io_uring *arg_ring, int socket_fd);$/;"	kind:parameter	line:57	language:C++	scope:prototype:Callbacks::Callbacks	typeref:typename:size_t	file:	roles:def	extras:fileScope	nth:1
buffer_size	tls.hpp	/^		size_t           buffer_size;$/;"	kind:member	line:51	language:C++	scope:class:Callbacks	typeref:typename:size_t	access:private	roles:def	end:51
buffer_size	tls.hpp	/^Botan::TLS::Server    *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t arg_buffer,/;"	kind:parameter	line:104	language:C++	scope:prototype:init_tls_engine	typeref:typename:size_t	file:	roles:def	extras:fileScope	nth:2
callback	start_server.hpp	/^		void (*callback)(void *, int32_t);$/;"	kind:member	line:47	language:C++	scope:struct:s_identifyer	typeref:typename:void (*)(void *,int32_t)	access:public	roles:def	end:47
callback_params	start_server.hpp	/^		void *callback_params;$/;"	kind:member	line:48	language:C++	scope:struct:s_identifyer	typeref:typename:void *	access:public	roles:def	end:48
callbacks	tls.cpp	/^		std::shared_ptr<Callbacks> callbacks = std::make_shared<Callbacks>(buffer, buffer_size, arg_ri/;"	kind:local	line:149	language:C++	scope:function:init_tls_engine	typeref:typename:std::shared_ptr<Callbacks>	file:	roles:def	extras:fileScope
cerrno	start_server.cpp	/^#include <cerrno>/;"	kind:header	line:21	language:C++	roles:system	extras:reference
cert	tls.cpp	/^std::shared_ptr<Botan::Private_Key> Server_Credentials::private_key_for(Botan::X509_Certificate /;"	kind:parameter	line:106	language:C++	scope:function:Server_Credentials::private_key_for	typeref:typename:Botan::X509_Certificate const &	file:	roles:def	extras:fileScope	nth:0
cert	tls.hpp	/^		std::shared_ptr<Botan::Private_Key> private_key_for(Botan::X509_Certificate const &cert,$/;"	kind:parameter	line:89	language:C++	scope:prototype:Server_Credentials::private_key_for	typeref:typename:Botan::X509_Certificate const &	file:	roles:def	extras:fileScope	nth:0
cert_chain	tls.cpp	/^	Server_Credentials::cert_chain(std::vector<std::string> const                &cert_key_types,$/;"	kind:function	line:96	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::X509_Certificate>	signature:(std::vector<std::string> const & cert_key_types,std::vector<Botan::AlgorithmIdentifier> const & cert_signature_schemes,std::string const & type,std::string const & context)	roles:def	end:104
cert_chain	tls.hpp	/^		std::vector<Botan::X509_Certificate>    cert_chain(std::vector<std::string> const &cert_key_ty/;"	kind:prototype	line:85	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::X509_Certificate>	access:public	signature:(std::vector<std::string> const & cert_key_types,std::vector<Botan::AlgorithmIdentifier> const & cert_signature_schemes,std::string const & type,std::string const & context)	roles:def	end:88	properties:override,virtual
cert_key_types	tls.cpp	/^	Server_Credentials::cert_chain(std::vector<std::string> const                &cert_key_types,$/;"	kind:parameter	line:96	language:C++	scope:function:Server_Credentials::cert_chain	typeref:typename:std::vector<std::string> const &	file:	roles:def	extras:fileScope	nth:0
cert_key_types	tls.hpp	/^		std::vector<Botan::X509_Certificate>    cert_chain(std::vector<std::string> const &cert_key_ty/;"	kind:parameter	line:85	language:C++	scope:prototype:Server_Credentials::cert_chain	typeref:typename:std::vector<std::string> const &	file:	roles:def	extras:fileScope	nth:0
cert_signature_schemes	tls.cpp	/^								   std::vector<Botan::AlgorithmIdentifier> const &cert_signature_schemes,$/;"	kind:parameter	line:97	language:C++	scope:function:Server_Credentials::cert_chain	typeref:typename:std::vector<Botan::AlgorithmIdentifier> const &	file:	roles:def	extras:fileScope	nth:1
cert_signature_schemes	tls.hpp	/^											std::vector<Botan::AlgorithmIdentifier> const &cert_signature_schemes,$/;"	kind:parameter	line:86	language:C++	scope:prototype:Server_Credentials::cert_chain	typeref:typename:std::vector<Botan::AlgorithmIdentifier> const &	file:	roles:def	extras:fileScope	nth:1
check_for_completions_and_make_callbacks	start_server.cpp	/^static void check_for_completions_and_make_callbacks(struct io_uring *ring, t_s_worker_id worker/;"	kind:function	line:85	language:C++	typeref:typename:void	file:	signature:(struct io_uring * ring,t_s_worker_id worker_id)	roles:def	extras:fileScope	end:102	properties:static
check_for_errors	check_for_errors.cpp	/^void check_for_errors(char const *str)$/;"	kind:function	line:36	language:C++	typeref:typename:void	signature:(char const * str)	roles:def	end:43
check_for_errors	helpers.hpp	/^void                   check_for_errors(char const *str);$/;"	kind:prototype	line:34	language:C++	typeref:typename:void	signature:(char const * str)	roles:def	end:34
check_for_errors.cpp	check_for_errors.cpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:55	epoch:1711022005
check_for_errors_worker	check_for_errors.cpp	/^void check_for_errors_worker(char const *str, t_s_worker_id worker_id)$/;"	kind:function	line:45	language:C++	typeref:typename:void	signature:(char const * str,t_s_worker_id worker_id)	roles:def	end:53
check_for_errors_worker	helpers.hpp	/^void                   check_for_errors_worker(char const *str, t_s_worker_id);$/;"	kind:prototype	line:35	language:C++	typeref:typename:void	signature:(char const * str,t_s_worker_id)	roles:def	end:35
connection_accepted	connection_accepted.cpp	/^void connection_accepted(void *data, int32_t res)$/;"	kind:function	line:37	language:C++	typeref:typename:void	signature:(void * data,int32_t res)	roles:def	end:83
connection_accepted	connection_accepted.hpp	/^void                   connection_accepted(void *data, int32_t res);$/;"	kind:prototype	line:58	language:C++	typeref:typename:void	signature:(void * data,int32_t res)	roles:def	end:58
connection_accepted.cpp	connection_accepted.cpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:85	epoch:1711536989
connection_accepted.hpp	connection_accepted.cpp	/^#include "connection_accepted.hpp"/;"	kind:header	line:13	language:C++	roles:local	extras:reference
connection_accepted.hpp	connection_accepted.hpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:60	epoch:1711536068
connection_accepted.hpp	start_server.cpp	/^#include "connection_accepted.hpp"/;"	kind:header	line:33	language:C++	roles:local	extras:reference
connection_accepted_data	connection_accepted.cpp	/^	t_s_connection_accepted_data connection_accepted_data = *reinterpret_cast<t_s_connection_accept/;"	kind:local	line:39	language:C++	scope:function:connection_accepted	typeref:typename:t_s_connection_accepted_data	file:	roles:def	extras:fileScope
connection_accepted_data	start_server.cpp	/^	static t_s_connection_accepted_data connection_accepted_data = {.server_config_list = server_co/;"	kind:local	line:57	language:C++	scope:function:issue_accept_if_needed	typeref:typename:t_s_connection_accepted_data	file:	roles:def	extras:fileScope	end:62	properties:static
connection_addres	connection_accepted.hpp	/^		sockaddr_in6           connection_addres;$/;"	kind:member	line:50	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:sockaddr_in6	access:public	roles:def	end:50
connection_addres	connection_accepted.hpp	/^		sockaddr_in6        connection_addres;$/;"	kind:member	line:38	language:C++	scope:struct:s_connection_data	typeref:typename:sockaddr_in6	access:public	roles:def	end:38
context	tls.cpp	/^																							std::string const &context)$/;"	kind:parameter	line:86	language:C++	scope:function:Server_Credentials::trusted_certificate_authorities	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:1
context	tls.cpp	/^																		std::string const             &context)$/;"	kind:parameter	line:108	language:C++	scope:function:Server_Credentials::private_key_for	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:2
context	tls.cpp	/^								   std::string const &type, std::string const &context)$/;"	kind:parameter	line:98	language:C++	scope:function:Server_Credentials::cert_chain	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:3
context	tls.hpp	/^																				std::string const &context) override;$/;"	kind:parameter	line:84	language:C++	scope:prototype:Server_Credentials::trusted_certificate_authorities	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:1
context	tls.hpp	/^															std::string const             &context) override;$/;"	kind:parameter	line:91	language:C++	scope:prototype:Server_Credentials::private_key_for	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:2
context	tls.hpp	/^											std::string const                             &context) override;$/;"	kind:parameter	line:88	language:C++	scope:prototype:Server_Credentials::cert_chain	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:3
cqe	start_server.cpp	/^	struct io_uring_cqe *cqe;$/;"	kind:local	line:87	language:C++	scope:function:check_for_completions_and_make_callbacks	typeref:struct:io_uring_cqe *	file:	roles:def	extras:fileScope	end:87
creds	tls.cpp	/^	std::shared_ptr<Server_Credentials> *creds;$/;"	kind:local	line:120	language:C++	scope:function:get_tls_engine_params	typeref:typename:std::shared_ptr<Server_Credentials> *	file:	roles:def	extras:fileScope	end:120
creds	tls.hpp	/^		std::shared_ptr<Server_Credentials>      		  *volatile creds;$/;"	kind:member	line:99	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Server_Credentials> * volatile	access:public	roles:def	end:99
cstddef	main.cpp	/^#include <cstddef>/;"	kind:header	line:14	language:C++	roles:system	extras:reference
cstddef	start_server.hpp	/^#include <cstddef>/;"	kind:header	line:15	language:C++	roles:system	extras:reference
cstddef	tls.cpp	/^#include <cstddef>/;"	kind:header	line:15	language:C++	roles:system	extras:reference
cstddef	tls.hpp	/^#include <cstddef>/;"	kind:header	line:20	language:C++	roles:system	extras:reference
cstdint	connection_accepted.hpp	/^#include <cstdint>/;"	kind:header	line:17	language:C++	roles:system	extras:reference
cstdint	get_free_connection_socket_index.cpp	/^#include <cstdint>/;"	kind:header	line:14	language:C++	roles:system	extras:reference
cstdint	main.cpp	/^#include <cstdint>/;"	kind:header	line:15	language:C++	roles:system	extras:reference
cstdint	start_server.cpp	/^#include <cstdint>/;"	kind:header	line:22	language:C++	roles:system	extras:reference
cstdint	start_server.hpp	/^#include <cstdint>/;"	kind:header	line:16	language:C++	roles:system	extras:reference
cstdint	tls.cpp	/^#include <cstdint>/;"	kind:header	line:16	language:C++	roles:system	extras:reference
cstdint	tls.hpp	/^#include <cstdint>/;"	kind:header	line:21	language:C++	roles:system	extras:reference
cstdio	connection_accepted.cpp	/^#include <cstdio>/;"	kind:header	line:16	language:C++	roles:system	extras:reference
cstdio	tls.cpp	/^#include <cstdio>/;"	kind:header	line:17	language:C++	roles:system	extras:reference
cstdlib	start_server.cpp	/^#include <cstdlib>/;"	kind:header	line:23	language:C++	roles:system	extras:reference
ctr_path	start_server.hpp	/^		char           *ctr_path;$/;"	kind:member	line:56	language:C++	scope:struct:s_server_cofig	typeref:typename:char *	access:public	roles:def	end:56
data	connection_accepted.cpp	/^void connection_accepted(void *data, int32_t res)$/;"	kind:parameter	line:37	language:C++	scope:function:connection_accepted	typeref:typename:void *	file:	roles:def	extras:fileScope	nth:0
data	connection_accepted.hpp	/^void                   connection_accepted(void *data, int32_t res);$/;"	kind:parameter	line:58	language:C++	scope:prototype:connection_accepted	typeref:typename:void *	file:	roles:def	extras:fileScope	nth:0
data	tls.cpp	/^void Callbacks::tls_emit_data(std::span<uint8_t const> data)$/;"	kind:parameter	line:42	language:C++	scope:function:Callbacks::tls_emit_data	typeref:typename:std::span<uint8_t const>	file:	roles:def	extras:fileScope	nth:0
data	tls.cpp	/^void Callbacks::tls_record_received(uint64_t seq_no, std::span<uint8_t const> data)$/;"	kind:parameter	line:56	language:C++	scope:function:Callbacks::tls_record_received	typeref:typename:std::span<uint8_t const>	file:	roles:def	extras:fileScope	nth:1
data	tls.hpp	/^		void tls_emit_data(std::span<uint8_t const> data) override;$/;"	kind:parameter	line:59	language:C++	scope:prototype:Callbacks::tls_emit_data	typeref:typename:std::span<uint8_t const>	file:	roles:def	extras:fileScope	nth:0
data	tls.hpp	/^		void tls_record_received(uint64_t seq_no, std::span<uint8_t const> data) override;$/;"	kind:parameter	line:60	language:C++	scope:prototype:Callbacks::tls_record_received	typeref:typename:std::span<uint8_t const>	file:	roles:def	extras:fileScope	nth:1
enter_loop	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:function	line:107	language:C++	typeref:typename:void	file:	signature:(t_s_worker_id worker_id,t_s_server_config_list server_config_list,struct io_uring * ring,int listening_fd)	roles:def	extras:fileScope	end:115	properties:static
enter_loop	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:prototype	line:104	language:C++	typeref:typename:void	file:	signature:(t_s_worker_id worker_id,t_s_server_config_list server_config_list,struct io_uring * ring,int listening_fd)	roles:def	extras:fileScope	end:105	properties:static
errno.h	check_for_errors.cpp	/^#include <errno.h>/;"	kind:header	line:13	language:C++	roles:system	extras:reference
errno.h	connection_accepted.cpp	/^#include <errno.h>/;"	kind:header	line:17	language:C++	roles:system	extras:reference
errno.h	main.cpp	/^#include <errno.h>/;"	kind:header	line:16	language:C++	roles:system	extras:reference
exception	tls.cpp	/^#include <exception>/;"	kind:header	line:18	language:C++	roles:system	extras:reference
false_val	main.cpp	/^	int           false_val = 0;$/;"	kind:local	line:68	language:C++	scope:function:lauch_workers_for_port	typeref:typename:int	file:	roles:def	extras:fileScope	end:68
fd_index	start_server.hpp	/^		unsigned int fd_index;$/;"	kind:member	line:45	language:C++	scope:struct:s_identifyer	typeref:typename:unsigned int	access:public	roles:def	end:45
free_connection_socket_index	get_free_connection_socket_index.cpp	/^void free_connection_socket_index(unsigned int internal_index)$/;"	kind:function	line:44	language:C++	typeref:typename:void	signature:(unsigned int internal_index)	roles:def	end:48
free_connection_socket_index	start_server.hpp	/^void                   free_connection_socket_index(unsigned int internal_index);$/;"	kind:prototype	line:70	language:C++	typeref:typename:void	signature:(unsigned int internal_index)	roles:def	end:70
g_buffer	start_server.cpp	/^uint8_t     g_buffer[REGISTERED_BUFFER_SIZE];$/;"	kind:variable	line:49	language:C++	typeref:typename:uint8_t[]	roles:def	end:49
g_buffer	start_server.hpp	/^extern uint8_t g_buffer[REGISTERED_BUFFER_SIZE];$/;"	kind:externvar	line:35	language:C++	typeref:typename:uint8_t[]	roles:def	end:35	properties:extern
g_params	tls.cpp	/^static t_s_tls_engine_params g_params; \/\/ NOLINT$/;"	kind:variable	line:116	language:C++	typeref:typename:t_s_tls_engine_params	file:	roles:def	extras:fileScope	end:116	properties:static
get_free_connection_socket_index.cpp	get_free_connection_socket_index.cpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:62	epoch:1711174460
get_in6_addr	main.cpp	/^static struct in6_addr get_in6_addr(char const *ipv6)$/;"	kind:function	line:52	language:C++	typeref:struct:in6_addr	file:	signature:(char const * ipv6)	roles:def	extras:fileScope	end:60	properties:static
get_in_addr	main.cpp	/^static struct in_addr get_in_addr(char const *ipv4)$/;"	kind:function	line:42	language:C++	typeref:struct:in_addr	file:	signature:(char const * ipv4)	roles:def	extras:fileScope	end:50	properties:static
get_next_connection_socket_index	get_free_connection_socket_index.cpp	/^unsigned int get_next_connection_socket_index(void)$/;"	kind:function	line:50	language:C++	typeref:typename:unsigned int	signature:(void)	roles:def	end:60
get_next_connection_socket_index	start_server.hpp	/^unsigned int           get_next_connection_socket_index(void);$/;"	kind:prototype	line:71	language:C++	typeref:typename:unsigned int	signature:(void)	roles:def	end:71
get_tls_engine_params	tls.cpp	/^t_s_tls_engine_params       *get_tls_engine_params(void)$/;"	kind:function	line:118	language:C++	typeref:typename:t_s_tls_engine_params *	signature:(void)	roles:def	end:142
get_tls_engine_params	tls.hpp	/^t_s_tls_engine_params *get_tls_engine_params(void);$/;"	kind:prototype	line:103	language:C++	typeref:typename:t_s_tls_engine_params *	signature:(void)	roles:def	end:103
given	get_free_connection_socket_index.cpp	/^static unsigned int given;$/;"	kind:variable	line:34	language:C++	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	end:34	properties:static
helpers.hpp	check_for_errors.cpp	/^#include "helpers.hpp"/;"	kind:header	line:17	language:C++	roles:local	extras:reference
helpers.hpp	helpers.hpp	/^#include "helpers.hpp"/;"	kind:header	line:15	language:C++	roles:local	extras:reference
helpers.hpp	helpers.hpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:37	epoch:1711020420
helpers.hpp	main.cpp	/^#include "helpers.hpp"/;"	kind:header	line:26	language:C++	roles:local	extras:reference
helpers.hpp	start_server.cpp	/^#include "helpers.hpp"/;"	kind:header	line:34	language:C++	roles:local	extras:reference
host_name	start_server.hpp	/^		char           *host_name;$/;"	kind:member	line:53	language:C++	scope:struct:s_server_cofig	typeref:typename:char *	access:public	roles:def	end:53
i	get_free_connection_socket_index.cpp	/^	for (unsigned int i = 1; i < FD_TABLE_SIZE \/ 2; i++)$/;"	kind:local	line:38	language:C++	scope:function:init_tracking_table	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	end:38
i	main.cpp	/^	for (unsigned int i = 0; i < worker_number; i++)$/;"	kind:local	line:80	language:C++	scope:function:lauch_workers_for_port	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	end:80
id_ptr	start_server.cpp	/^	t_s_identifyer      *id_ptr;$/;"	kind:local	line:88	language:C++	scope:function:check_for_completions_and_make_callbacks	typeref:typename:t_s_identifyer *	file:	roles:def	extras:fileScope	end:88
identifyer	start_server.cpp	/^	static t_s_identifyer identifyer = {.callback = connection_accepted, .callback_params = &connec/;"	kind:local	line:64	language:C++	scope:function:issue_accept_if_needed	typeref:typename:t_s_identifyer	file:	roles:def	extras:fileScope	end:64	properties:static
in	tls.cpp	/^	Botan::DataSource_Stream in("botan.randombit.net.key");$/;"	kind:local	line:80	language:C++	scope:function:Server_Credentials::Server_Credentials	typeref:typename:Botan::DataSource_Stream	file:	roles:def	extras:fileScope	end:80
init_tls_engine	tls.cpp	/^Botan::TLS::Server *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t buffer, size_t/;"	kind:function	line:144	language:C++	typeref:typename:Botan::TLS::Server *	signature:(t_s_tls_engine_params const * & params,uint8_t buffer,size_t buffer_size,struct io_uring * arg_ring,int socket_fd)	roles:def	end:157
init_tls_engine	tls.hpp	/^Botan::TLS::Server    *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t arg_buffer,/;"	kind:prototype	line:104	language:C++	typeref:typename:Botan::TLS::Server *	signature:(t_s_tls_engine_params const * & params,uint8_t arg_buffer,size_t buffer_size,struct io_uring * arg_ring,int socket_fd)	roles:def	end:105
init_tracking_table	get_free_connection_socket_index.cpp	/^void                init_tracking_table(void)$/;"	kind:function	line:36	language:C++	typeref:typename:void	signature:(void)	roles:def	end:42
init_tracking_table	start_server.hpp	/^void                   init_tracking_table(void);$/;"	kind:prototype	line:72	language:C++	typeref:typename:void	signature:(void)	roles:def	end:72
internal_index	get_free_connection_socket_index.cpp	/^void free_connection_socket_index(unsigned int internal_index)$/;"	kind:parameter	line:44	language:C++	scope:function:free_connection_socket_index	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	nth:0
internal_index	start_server.cpp	/^	unsigned int const                  internal_index = get_next_connection_socket_index();$/;"	kind:local	line:56	language:C++	scope:function:issue_accept_if_needed	typeref:typename:unsigned int const	file:	roles:def	extras:fileScope	end:56
internal_index	start_server.hpp	/^void                   free_connection_socket_index(unsigned int internal_index);$/;"	kind:parameter	line:70	language:C++	scope:prototype:free_connection_socket_index	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	nth:0
ipv4	connection_accepted.cpp	/^	in_addr                      ipv4;$/;"	kind:local	line:40	language:C++	scope:function:connection_accepted	typeref:typename:in_addr	file:	roles:def	extras:fileScope	end:40
ipv4	main.cpp	/^static struct in_addr get_in_addr(char const *ipv4)$/;"	kind:parameter	line:42	language:C++	scope:function:get_in_addr	typeref:typename:char const *	file:	roles:def	extras:fileScope	nth:0
ipv4	start_server.hpp	/^		struct in_addr  ipv4;$/;"	kind:member	line:55	language:C++	scope:struct:s_server_cofig	typeref:struct:in_addr	access:public	roles:def	end:55
ipv6	main.cpp	/^static struct in6_addr get_in6_addr(char const *ipv6)$/;"	kind:parameter	line:52	language:C++	scope:function:get_in6_addr	typeref:typename:char const *	file:	roles:def	extras:fileScope	nth:0
ipv6	start_server.hpp	/^		struct in6_addr ipv6;$/;"	kind:member	line:54	language:C++	scope:struct:s_server_cofig	typeref:struct:in6_addr	access:public	roles:def	end:54
issue_accept_if_needed	start_server.cpp	/^static void issue_accept_if_needed(struct io_uring *ring, int listening_fd, t_s_worker_id worker/;"	kind:function	line:51	language:C++	typeref:typename:void	file:	signature:(struct io_uring * ring,int listening_fd,t_s_worker_id worker_id,t_s_server_config_list server_config_list)	roles:def	extras:fileScope	end:83	properties:static
key_path	start_server.hpp	/^		char           *key_path;$/;"	kind:member	line:57	language:C++	scope:struct:s_server_cofig	typeref:typename:char *	access:public	roles:def	end:57
lauch_workers_for_port	main.cpp	/^static void lauch_workers_for_port(uint16_t port, unsigned int worker_number, t_s_server_config /;"	kind:function	line:62	language:C++	typeref:typename:void	file:	signature:(uint16_t port,unsigned int worker_number,t_s_server_config * servers,size_t server_number)	roles:def	extras:fileScope	end:92	properties:static
liburing.h	start_server.cpp	/^#include <liburing.h>/;"	kind:header	line:24	language:C++	roles:system	extras:reference
liburing.h	tls.cpp	/^#include <liburing.h>/;"	kind:header	line:19	language:C++	roles:system	extras:reference
liburing/io_uring.h	start_server.cpp	/^#include <liburing\/io_uring.h>/;"	kind:header	line:25	language:C++	roles:system	extras:reference
limits.h	main.cpp	/^#include <limits.h>/;"	kind:header	line:17	language:C++	roles:system	extras:reference
limits.h	start_server.cpp	/^#include <limits.h>/;"	kind:header	line:26	language:C++	roles:system	extras:reference
lisening_fd	main.cpp	/^	int                 lisening_fd = socket(AF_INET6, SOCK_STREAM, IPPROTO_TCP);$/;"	kind:local	line:65	language:C++	scope:function:lauch_workers_for_port	typeref:typename:int	file:	roles:def	extras:fileScope	end:65
listening_fd	start_server.cpp	/^					   int listening_fd) __attribute__((noreturn));$/;"	kind:parameter	line:105	language:C++	scope:prototype:enter_loop	typeref:typename:int	file:	roles:def	extras:fileScope	nth:3
listening_fd	start_server.cpp	/^					   int listening_fd)$/;"	kind:parameter	line:108	language:C++	scope:function:enter_loop	typeref:typename:int	file:	roles:def	extras:fileScope	nth:3
listening_fd	start_server.cpp	/^static void issue_accept_if_needed(struct io_uring *ring, int listening_fd, t_s_worker_id worker/;"	kind:parameter	line:51	language:C++	scope:function:issue_accept_if_needed	typeref:typename:int	file:	roles:def	extras:fileScope	nth:1
listening_fd	start_server.cpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:parameter	line:117	language:C++	scope:function:start_server	typeref:typename:int	file:	roles:def	extras:fileScope	nth:2
listening_fd	start_server.hpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:parameter	line:68	language:C++	scope:prototype:start_server	typeref:typename:int	file:	roles:def	extras:fileScope	nth:2
m_cert	tls.hpp	/^		Botan::X509_Certificate             m_cert;$/;"	kind:member	line:77	language:C++	scope:class:Server_Credentials	typeref:typename:Botan::X509_Certificate	access:private	roles:def	end:77
m_key	tls.hpp	/^		std::shared_ptr<Botan::Private_Key> m_key;$/;"	kind:member	line:76	language:C++	scope:class:Server_Credentials	typeref:typename:std::shared_ptr<Botan::Private_Key>	access:private	roles:def	end:76
main	main.cpp	/^int main(void)$/;"	kind:function	line:94	language:C++	typeref:typename:int	signature:(void)	roles:def	end:115
main.cpp	main.cpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:117	epoch:1711112663
memory	start_server.cpp	/^#include <memory>/;"	kind:header	line:27	language:C++	roles:system	extras:reference
memory	tls.hpp	/^#include <memory>/;"	kind:header	line:22	language:C++	roles:system	extras:reference
move_port_80_to_servers_port	start_server.hpp	/^		bool            move_port_80_to_servers_port;$/;"	kind:member	line:59	language:C++	scope:struct:s_server_cofig	typeref:typename:bool	access:public	roles:def	end:59
move_www_host_name	start_server.hpp	/^		bool            move_www_host_name;$/;"	kind:member	line:58	language:C++	scope:struct:s_server_cofig	typeref:typename:bool	access:public	roles:def	end:58
netinet/in.h	connection_accepted.cpp	/^#include <netinet\/in.h>/;"	kind:header	line:18	language:C++	roles:system	extras:reference
netinet/in.h	connection_accepted.hpp	/^#include <netinet\/in.h>/;"	kind:header	line:18	language:C++	roles:system	extras:reference
netinet/in.h	main.cpp	/^#include <netinet\/in.h>/;"	kind:header	line:18	language:C++	roles:system	extras:reference
netinet/in.h	start_server.cpp	/^#include <netinet\/in.h>/;"	kind:header	line:28	language:C++	roles:system	extras:reference
netinet/in.h	start_server.hpp	/^#include <netinet\/in.h>/;"	kind:header	line:17	language:C++	roles:system	extras:reference
params	tls.cpp	/^Botan::TLS::Server *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t buffer, size_t/;"	kind:parameter	line:144	language:C++	scope:function:init_tls_engine	typeref:typename:t_s_tls_engine_params const * &	file:	roles:def	extras:fileScope	nth:0
params	tls.hpp	/^Botan::TLS::Server    *init_tls_engine(t_s_tls_engine_params const *&params, uint8_t arg_buffer,/;"	kind:parameter	line:104	language:C++	scope:prototype:init_tls_engine	typeref:typename:t_s_tls_engine_params const * &	file:	roles:def	extras:fileScope	nth:0
policy	tls.cpp	/^		std::shared_ptr<Botan::TLS::Strict_Policy>   policy = std::make_shared<Botan::TLS::Strict_Poli/;"	kind:local	line:128	language:C++	scope:function:get_tls_engine_params	typeref:typename:std::shared_ptr<Botan::TLS::Strict_Policy>	file:	roles:def	extras:fileScope
policy	tls.hpp	/^		std::shared_ptr<Botan::TLS::Strict_Policy>        policy;$/;"	kind:member	line:100	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Botan::TLS::Strict_Policy>	access:public	roles:def	end:100
port	main.cpp	/^static void lauch_workers_for_port(uint16_t port, unsigned int worker_number, t_s_server_config /;"	kind:parameter	line:62	language:C++	scope:function:lauch_workers_for_port	typeref:typename:uint16_t	file:	roles:def	extras:fileScope	nth:0
port	start_server.hpp	/^		uint16_t     port;$/;"	kind:member	line:40	language:C++	scope:struct:s_worker_id	typeref:typename:uint16_t	access:public	roles:def	end:40
private_key_for	tls.cpp	/^std::shared_ptr<Botan::Private_Key> Server_Credentials::private_key_for(Botan::X509_Certificate /;"	kind:function	line:106	language:C++	scope:class:Server_Credentials	typeref:typename:std::shared_ptr<Botan::Private_Key>	signature:(Botan::X509_Certificate const & cert,std::string const & type,std::string const & context)	roles:def	end:114
private_key_for	tls.hpp	/^		std::shared_ptr<Botan::Private_Key> private_key_for(Botan::X509_Certificate const &cert,$/;"	kind:prototype	line:89	language:C++	scope:class:Server_Credentials	typeref:typename:std::shared_ptr<Botan::Private_Key>	access:public	signature:(Botan::X509_Certificate const & cert,std::string const & type,std::string const & context)	roles:def	end:91	properties:override,virtual
res	connection_accepted.cpp	/^void connection_accepted(void *data, int32_t res)$/;"	kind:parameter	line:37	language:C++	scope:function:connection_accepted	typeref:typename:int32_t	file:	roles:def	extras:fileScope	nth:1
res	connection_accepted.hpp	/^void                   connection_accepted(void *data, int32_t res);$/;"	kind:parameter	line:58	language:C++	scope:prototype:connection_accepted	typeref:typename:int32_t	file:	roles:def	extras:fileScope	nth:1
ret	get_free_connection_socket_index.cpp	/^	unsigned int ret = tracking_table[available];$/;"	kind:local	line:52	language:C++	scope:function:get_next_connection_socket_index	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	end:52
ring	connection_accepted.hpp	/^		struct io_uring       *ring;$/;"	kind:member	line:53	language:C++	scope:struct:s_connection_accepted_data	typeref:struct:io_uring *	access:public	roles:def	end:53
ring	connection_accepted.hpp	/^		struct io_uring    *ring;$/;"	kind:member	line:44	language:C++	scope:struct:s_connection_data	typeref:struct:io_uring *	access:public	roles:def	end:44
ring	start_server.cpp	/^	struct io_uring ring;$/;"	kind:local	line:119	language:C++	scope:function:start_server	typeref:struct:io_uring	file:	roles:def	extras:fileScope	end:119
ring	start_server.cpp	/^static void check_for_completions_and_make_callbacks(struct io_uring *ring, t_s_worker_id worker/;"	kind:parameter	line:85	language:C++	scope:function:check_for_completions_and_make_callbacks	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:0
ring	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:parameter	line:104	language:C++	scope:prototype:enter_loop	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:2
ring	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:parameter	line:107	language:C++	scope:function:enter_loop	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:2
ring	start_server.cpp	/^static void issue_accept_if_needed(struct io_uring *ring, int listening_fd, t_s_worker_id worker/;"	kind:parameter	line:51	language:C++	scope:function:issue_accept_if_needed	typeref:struct:io_uring *	file:	roles:def	extras:fileScope	nth:0
ring	tls.hpp	/^		struct io_uring *ring;$/;"	kind:member	line:53	language:C++	scope:class:Callbacks	typeref:struct:io_uring *	access:private	roles:def	end:53
rng	tls.cpp	/^		std::shared_ptr<Botan::RNG>                rng = std::make_shared<Botan::AutoSeeded_RNG>();$/;"	kind:local	line:124	language:C++	scope:function:get_tls_engine_params	typeref:typename:std::shared_ptr<Botan::RNG>	file:	roles:def	extras:fileScope
rng	tls.hpp	/^		std::shared_ptr<Botan::RNG>                       rng;$/;"	kind:member	line:97	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Botan::RNG>	access:public	roles:def	end:97
s_connection_accepted_data	connection_accepted.hpp	/^typedef struct s_connection_accepted_data$/;"	kind:struct	line:47	language:C++	roles:def	end:56
s_connection_accepted_data::buffer	connection_accepted.hpp	/^		uint8_t               *buffer;$/;"	kind:member	line:51	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:uint8_t *	access:public	roles:def	extras:qualified
s_connection_accepted_data::buffer_size	connection_accepted.hpp	/^		size_t                 buffer_size;$/;"	kind:member	line:52	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:size_t	access:public	roles:def	extras:qualified
s_connection_accepted_data::connection_addres	connection_accepted.hpp	/^		sockaddr_in6           connection_addres;$/;"	kind:member	line:50	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:sockaddr_in6	access:public	roles:def	extras:qualified
s_connection_accepted_data::ring	connection_accepted.hpp	/^		struct io_uring       *ring;$/;"	kind:member	line:53	language:C++	scope:struct:s_connection_accepted_data	typeref:struct:io_uring *	access:public	roles:def	extras:qualified
s_connection_accepted_data::server_config_list	connection_accepted.hpp	/^		t_s_server_config_list server_config_list;$/;"	kind:member	line:49	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:t_s_server_config_list	access:public	roles:def	extras:qualified
s_connection_accepted_data::socket_fd	connection_accepted.hpp	/^		unsigned int           socket_fd;$/;"	kind:member	line:54	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:unsigned int	access:public	roles:def	extras:qualified
s_connection_accepted_data::worker_id	connection_accepted.hpp	/^		t_s_worker_id          worker_id;$/;"	kind:member	line:55	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:t_s_worker_id	access:public	roles:def	extras:qualified
s_connection_data	connection_accepted.hpp	/^typedef struct s_connection_data$/;"	kind:struct	line:36	language:C++	roles:def	end:45
s_connection_data::buffer	connection_accepted.hpp	/^		uint8_t            *buffer;$/;"	kind:member	line:41	language:C++	scope:struct:s_connection_data	typeref:typename:uint8_t *	access:public	roles:def	extras:qualified
s_connection_data::buffer_size	connection_accepted.hpp	/^		size_t              buffer_size;$/;"	kind:member	line:42	language:C++	scope:struct:s_connection_data	typeref:typename:size_t	access:public	roles:def	extras:qualified
s_connection_data::connection_addres	connection_accepted.hpp	/^		sockaddr_in6        connection_addres;$/;"	kind:member	line:38	language:C++	scope:struct:s_connection_data	typeref:typename:sockaddr_in6	access:public	roles:def	extras:qualified
s_connection_data::ring	connection_accepted.hpp	/^		struct io_uring    *ring;$/;"	kind:member	line:44	language:C++	scope:struct:s_connection_data	typeref:struct:io_uring *	access:public	roles:def	extras:qualified
s_connection_data::socket_fd	connection_accepted.hpp	/^		unsigned int        socket_fd;$/;"	kind:member	line:43	language:C++	scope:struct:s_connection_data	typeref:typename:unsigned int	access:public	roles:def	extras:qualified
s_connection_data::tsl_engien	connection_accepted.hpp	/^		Botan::TLS::Server *tsl_engien;$/;"	kind:member	line:40	language:C++	scope:struct:s_connection_data	typeref:typename:Botan::TLS::Server *	access:public	roles:def	extras:qualified
s_identifyer	start_server.hpp	/^typedef struct s_identifyer$/;"	kind:struct	line:43	language:C++	roles:def	end:49
s_identifyer::callback	start_server.hpp	/^		void (*callback)(void *, int32_t);$/;"	kind:member	line:47	language:C++	scope:struct:s_identifyer	typeref:typename:void (*)(void *,int32_t)	access:public	roles:def	extras:qualified
s_identifyer::callback_params	start_server.hpp	/^		void *callback_params;$/;"	kind:member	line:48	language:C++	scope:struct:s_identifyer	typeref:typename:void *	access:public	roles:def	extras:qualified
s_identifyer::fd_index	start_server.hpp	/^		unsigned int fd_index;$/;"	kind:member	line:45	language:C++	scope:struct:s_identifyer	typeref:typename:unsigned int	access:public	roles:def	extras:qualified
s_server_cofig	start_server.hpp	/^typedef struct s_server_cofig$/;"	kind:struct	line:51	language:C++	roles:def	end:60
s_server_cofig::ctr_path	start_server.hpp	/^		char           *ctr_path;$/;"	kind:member	line:56	language:C++	scope:struct:s_server_cofig	typeref:typename:char *	access:public	roles:def	extras:qualified
s_server_cofig::host_name	start_server.hpp	/^		char           *host_name;$/;"	kind:member	line:53	language:C++	scope:struct:s_server_cofig	typeref:typename:char *	access:public	roles:def	extras:qualified
s_server_cofig::ipv4	start_server.hpp	/^		struct in_addr  ipv4;$/;"	kind:member	line:55	language:C++	scope:struct:s_server_cofig	typeref:struct:in_addr	access:public	roles:def	extras:qualified
s_server_cofig::ipv6	start_server.hpp	/^		struct in6_addr ipv6;$/;"	kind:member	line:54	language:C++	scope:struct:s_server_cofig	typeref:struct:in6_addr	access:public	roles:def	extras:qualified
s_server_cofig::key_path	start_server.hpp	/^		char           *key_path;$/;"	kind:member	line:57	language:C++	scope:struct:s_server_cofig	typeref:typename:char *	access:public	roles:def	extras:qualified
s_server_cofig::move_port_80_to_servers_port	start_server.hpp	/^		bool            move_port_80_to_servers_port;$/;"	kind:member	line:59	language:C++	scope:struct:s_server_cofig	typeref:typename:bool	access:public	roles:def	extras:qualified
s_server_cofig::move_www_host_name	start_server.hpp	/^		bool            move_www_host_name;$/;"	kind:member	line:58	language:C++	scope:struct:s_server_cofig	typeref:typename:bool	access:public	roles:def	extras:qualified
s_server_cofig_list	start_server.hpp	/^typedef struct s_server_cofig_list$/;"	kind:struct	line:62	language:C++	roles:def	end:66
s_server_cofig_list::server_configs	start_server.hpp	/^		t_s_server_config *server_configs;$/;"	kind:member	line:64	language:C++	scope:struct:s_server_cofig_list	typeref:typename:t_s_server_config *	access:public	roles:def	extras:qualified
s_server_cofig_list::server_number	start_server.hpp	/^		size_t             server_number;$/;"	kind:member	line:65	language:C++	scope:struct:s_server_cofig_list	typeref:typename:size_t	access:public	roles:def	extras:qualified
s_tls_engine_params	tls.hpp	/^typedef struct s_tls_engine_params$/;"	kind:struct	line:95	language:C++	roles:def	end:101
s_tls_engine_params::creds	tls.hpp	/^		std::shared_ptr<Server_Credentials>      		  *volatile creds;$/;"	kind:member	line:99	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Server_Credentials> * volatile	access:public	roles:def	extras:qualified
s_tls_engine_params::policy	tls.hpp	/^		std::shared_ptr<Botan::TLS::Strict_Policy>        policy;$/;"	kind:member	line:100	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Botan::TLS::Strict_Policy>	access:public	roles:def	extras:qualified
s_tls_engine_params::rng	tls.hpp	/^		std::shared_ptr<Botan::RNG>                       rng;$/;"	kind:member	line:97	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Botan::RNG>	access:public	roles:def	extras:qualified
s_tls_engine_params::session_mgr	tls.hpp	/^		std::shared_ptr<Botan::TLS::Session_Manager_Noop> session_mgr;$/;"	kind:member	line:98	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Botan::TLS::Session_Manager_Noop>	access:public	roles:def	extras:qualified
s_worker_id	start_server.hpp	/^typedef struct s_worker_id$/;"	kind:struct	line:37	language:C++	roles:def	end:41
s_worker_id::port	start_server.hpp	/^		uint16_t     port;$/;"	kind:member	line:40	language:C++	scope:struct:s_worker_id	typeref:typename:uint16_t	access:public	roles:def	extras:qualified
s_worker_id::worker_num	start_server.hpp	/^		unsigned int worker_num;$/;"	kind:member	line:39	language:C++	scope:struct:s_worker_id	typeref:typename:unsigned int	access:public	roles:def	extras:qualified
seq_no	tls.cpp	/^void Callbacks::tls_record_received(uint64_t seq_no, std::span<uint8_t const> data)$/;"	kind:parameter	line:56	language:C++	scope:function:Callbacks::tls_record_received	typeref:typename:uint64_t	file:	roles:def	extras:fileScope	nth:0
seq_no	tls.hpp	/^		void tls_record_received(uint64_t seq_no, std::span<uint8_t const> data) override;$/;"	kind:parameter	line:60	language:C++	scope:prototype:Callbacks::tls_record_received	typeref:typename:uint64_t	file:	roles:def	extras:fileScope	nth:0
server_config_list	connection_accepted.hpp	/^		t_s_server_config_list server_config_list;$/;"	kind:member	line:49	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:t_s_server_config_list	access:public	roles:def	end:49
server_config_list	start_server.cpp	/^								   t_s_server_config_list server_config_list)$/;"	kind:parameter	line:52	language:C++	scope:function:issue_accept_if_needed	typeref:typename:t_s_server_config_list	file:	roles:def	extras:fileScope	nth:3
server_config_list	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:parameter	line:104	language:C++	scope:prototype:enter_loop	typeref:typename:t_s_server_config_list	file:	roles:def	extras:fileScope	nth:1
server_config_list	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:parameter	line:107	language:C++	scope:function:enter_loop	typeref:typename:t_s_server_config_list	file:	roles:def	extras:fileScope	nth:1
server_config_list	start_server.cpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:parameter	line:117	language:C++	scope:function:start_server	typeref:typename:t_s_server_config_list	file:	roles:def	extras:fileScope	nth:1
server_config_list	start_server.hpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:parameter	line:68	language:C++	scope:prototype:start_server	typeref:typename:t_s_server_config_list	file:	roles:def	extras:fileScope	nth:1
server_configs	start_server.hpp	/^		t_s_server_config *server_configs;$/;"	kind:member	line:64	language:C++	scope:struct:s_server_cofig_list	typeref:typename:t_s_server_config *	access:public	roles:def	end:64
server_number	main.cpp	/^								   size_t server_number)$/;"	kind:parameter	line:63	language:C++	scope:function:lauch_workers_for_port	typeref:typename:size_t	file:	roles:def	extras:fileScope	nth:3
server_number	start_server.hpp	/^		size_t             server_number;$/;"	kind:member	line:65	language:C++	scope:struct:s_server_cofig_list	typeref:typename:size_t	access:public	roles:def	end:65
servers	main.cpp	/^	t_s_server_config servers[] = {$/;"	kind:local	line:96	language:C++	scope:function:main	typeref:typename:t_s_server_config[]	file:	roles:def	extras:fileScope	end:104
servers	main.cpp	/^static void lauch_workers_for_port(uint16_t port, unsigned int worker_number, t_s_server_config /;"	kind:parameter	line:62	language:C++	scope:function:lauch_workers_for_port	typeref:typename:t_s_server_config *	file:	roles:def	extras:fileScope	nth:2
session_mgr	tls.cpp	/^		std::shared_ptr<Botan::TLS::Session_Manager_Noop> session_mgr =$/;"	kind:local	line:125	language:C++	scope:function:get_tls_engine_params	typeref:typename:std::shared_ptr<Botan::TLS::Session_Manager_Noop>	file:	roles:def	extras:fileScope
session_mgr	tls.hpp	/^		std::shared_ptr<Botan::TLS::Session_Manager_Noop> session_mgr;$/;"	kind:member	line:98	language:C++	scope:struct:s_tls_engine_params	typeref:typename:std::shared_ptr<Botan::TLS::Session_Manager_Noop>	access:public	roles:def	end:98
signal.h	main.cpp	/^#include <signal.h>/;"	kind:header	line:19	language:C++	roles:system	extras:reference
socket_fd	connection_accepted.hpp	/^		unsigned int           socket_fd;$/;"	kind:member	line:54	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:unsigned int	access:public	roles:def	end:54
socket_fd	connection_accepted.hpp	/^		unsigned int        socket_fd;$/;"	kind:member	line:43	language:C++	scope:struct:s_connection_data	typeref:typename:unsigned int	access:public	roles:def	end:43
socket_fd	tls.cpp	/^									struct io_uring *arg_ring, int socket_fd)$/;"	kind:parameter	line:145	language:C++	scope:function:init_tls_engine	typeref:typename:int	file:	roles:def	extras:fileScope	nth:4
socket_fd	tls.hpp	/^									   struct io_uring *arg_ring, int socket_fd);$/;"	kind:parameter	line:105	language:C++	scope:prototype:init_tls_engine	typeref:typename:int	file:	roles:def	extras:fileScope	nth:4
socket_fd	tls.hpp	/^		Callbacks(uint8_t *buffer, size_t buffer_size, struct io_uring *arg_ring, int socket_fd);$/;"	kind:parameter	line:57	language:C++	scope:prototype:Callbacks::Callbacks	typeref:typename:int	file:	roles:def	extras:fileScope	nth:3
socket_fd	tls.hpp	/^		int              socket_fd;$/;"	kind:member	line:54	language:C++	scope:class:Callbacks	typeref:typename:int	access:private	roles:def	end:54
sqe	start_server.cpp	/^	struct io_uring_sqe                *sqe;$/;"	kind:local	line:54	language:C++	scope:function:issue_accept_if_needed	typeref:struct:io_uring_sqe *	file:	roles:def	extras:fileScope	end:54
sqe	tls.cpp	/^	struct io_uring_sqe *sqe = io_uring_get_sqe(ring);$/;"	kind:local	line:45	language:C++	scope:function:Callbacks::tls_emit_data	typeref:struct:io_uring_sqe *	file:	roles:def	extras:fileScope	end:45
start_server	start_server.cpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:function	line:117	language:C++	typeref:typename:void	signature:(t_s_worker_id worker_id,t_s_server_config_list server_config_list,int listening_fd)	roles:def	end:133
start_server	start_server.hpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:prototype	line:68	language:C++	typeref:typename:void	signature:(t_s_worker_id worker_id,t_s_server_config_list server_config_list,int listening_fd)	roles:def	end:69
start_server.cpp	start_server.cpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:135	epoch:1711538348
start_server.hpp	check_for_errors.cpp	/^#include "start_server.hpp"/;"	kind:header	line:18	language:C++	roles:local	extras:reference
start_server.hpp	connection_accepted.hpp	/^#include "start_server.hpp"/;"	kind:header	line:15	language:C++	roles:local	extras:reference
start_server.hpp	get_free_connection_socket_index.cpp	/^#include "start_server.hpp"/;"	kind:header	line:13	language:C++	roles:local	extras:reference
start_server.hpp	helpers.hpp	/^#include "start_server.hpp"/;"	kind:header	line:16	language:C++	roles:local	extras:reference
start_server.hpp	main.cpp	/^#include "start_server.hpp"/;"	kind:header	line:27	language:C++	roles:local	extras:reference
start_server.hpp	start_server.cpp	/^#include "start_server.hpp"/;"	kind:header	line:35	language:C++	roles:local	extras:reference
start_server.hpp	start_server.hpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:74	epoch:1711538298
start_server.hpp	tls.cpp	/^#include "start_server.hpp"/;"	kind:header	line:14	language:C++	roles:local	extras:reference
stdint.h	main.cpp	/^#include <stdint.h>/;"	kind:header	line:20	language:C++	roles:system	extras:reference
stdio.h	check_for_errors.cpp	/^#include <stdio.h>/;"	kind:header	line:14	language:C++	roles:system	extras:reference
stdio.h	main.cpp	/^#include <stdio.h>/;"	kind:header	line:21	language:C++	roles:system	extras:reference
stdio.h	start_server.cpp	/^#include <stdio.h>/;"	kind:header	line:29	language:C++	roles:system	extras:reference
stdlib.h	check_for_errors.cpp	/^#include <stdlib.h>/;"	kind:header	line:15	language:C++	roles:system	extras:reference
stdlib.h	main.cpp	/^#include <stdlib.h>/;"	kind:header	line:22	language:C++	roles:system	extras:reference
stdlib.h	start_server.cpp	/^#include <stdlib.h>/;"	kind:header	line:30	language:C++	roles:system	extras:reference
str	check_for_errors.cpp	/^void check_for_errors(char const *str)$/;"	kind:parameter	line:36	language:C++	scope:function:check_for_errors	typeref:typename:char const *	file:	roles:def	extras:fileScope	nth:0
str	check_for_errors.cpp	/^void check_for_errors_worker(char const *str, t_s_worker_id worker_id)$/;"	kind:parameter	line:45	language:C++	scope:function:check_for_errors_worker	typeref:typename:char const *	file:	roles:def	extras:fileScope	nth:0
str	connection_accepted.cpp	/^	char                         str[8 * 4 + 7 + 1];$/;"	kind:local	line:41	language:C++	scope:function:connection_accepted	typeref:typename:char[]	file:	roles:def	extras:fileScope	end:41
str	helpers.hpp	/^void                   check_for_errors(char const *str);$/;"	kind:parameter	line:34	language:C++	scope:prototype:check_for_errors	typeref:typename:char const *	file:	roles:def	extras:fileScope	nth:0
str	helpers.hpp	/^void                   check_for_errors_worker(char const *str, t_s_worker_id);$/;"	kind:parameter	line:35	language:C++	scope:prototype:check_for_errors_worker	typeref:typename:char const *	file:	roles:def	extras:fileScope	nth:0
sys/socket.h	connection_accepted.cpp	/^#include <sys\/socket.h>/;"	kind:header	line:19	language:C++	roles:system	extras:reference
sys/socket.h	main.cpp	/^#include <sys\/socket.h>/;"	kind:header	line:23	language:C++	roles:system	extras:reference
sys/socket.h	start_server.cpp	/^#include <sys\/socket.h>/;"	kind:header	line:31	language:C++	roles:system	extras:reference
t_s_connection_accepted_data	connection_accepted.hpp	/^} t_s_connection_accepted_data;$/;"	kind:typedef	line:56	language:C++	typeref:struct:s_connection_accepted_data	roles:def
t_s_connection_data	connection_accepted.hpp	/^} t_s_connection_data;$/;"	kind:typedef	line:45	language:C++	typeref:struct:s_connection_data	roles:def
t_s_identifyer	start_server.hpp	/^} t_s_identifyer;$/;"	kind:typedef	line:49	language:C++	typeref:struct:s_identifyer	roles:def
t_s_server_config	start_server.hpp	/^} t_s_server_config;$/;"	kind:typedef	line:60	language:C++	typeref:struct:s_server_cofig	roles:def
t_s_server_config_list	start_server.hpp	/^} t_s_server_config_list;$/;"	kind:typedef	line:66	language:C++	typeref:struct:s_server_cofig_list	roles:def
t_s_tls_engine_params	tls.hpp	/^} t_s_tls_engine_params;$/;"	kind:typedef	line:101	language:C++	typeref:struct:s_tls_engine_params	roles:def
t_s_worker_id	start_server.hpp	/^} t_s_worker_id;$/;"	kind:typedef	line:41	language:C++	typeref:struct:s_worker_id	roles:def
tls.cpp	tls.cpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:159	epoch:1711539199
tls.hpp	connection_accepted.cpp	/^#include "tls.hpp"/;"	kind:header	line:14	language:C++	roles:local	extras:reference
tls.hpp	connection_accepted.hpp	/^#include "tls.hpp"/;"	kind:header	line:16	language:C++	roles:local	extras:reference
tls.hpp	start_server.cpp	/^#include "tls.hpp"/;"	kind:header	line:20	language:C++	roles:local	extras:reference
tls.hpp	tls.cpp	/^#include "tls.hpp"/;"	kind:header	line:13	language:C++	roles:local	extras:reference
tls.hpp	tls.hpp	1;"	kind:file	line:1	language:C++	roles:def	extras:inputFile	end:107	epoch:1711538796
tls_alert	tls.cpp	/^void Callbacks::tls_alert(Botan::TLS::Alert alert)$/;"	kind:function	line:63	language:C++	scope:class:Callbacks	typeref:typename:void	signature:(Botan::TLS::Alert alert)	roles:def	end:67
tls_alert	tls.hpp	/^		void tls_alert(Botan::TLS::Alert alert) override;$/;"	kind:prototype	line:61	language:C++	scope:class:Callbacks	typeref:typename:void	access:public	signature:(Botan::TLS::Alert alert)	roles:def	end:61	properties:override,virtual
tls_emit_data	tls.cpp	/^void Callbacks::tls_emit_data(std::span<uint8_t const> data)$/;"	kind:function	line:42	language:C++	scope:class:Callbacks	typeref:typename:void	signature:(std::span<uint8_t const> data)	roles:def	end:54
tls_emit_data	tls.hpp	/^		void tls_emit_data(std::span<uint8_t const> data) override;$/;"	kind:prototype	line:59	language:C++	scope:class:Callbacks	typeref:typename:void	access:public	signature:(std::span<uint8_t const> data)	roles:def	end:59	properties:override,virtual
tls_record_received	tls.cpp	/^void Callbacks::tls_record_received(uint64_t seq_no, std::span<uint8_t const> data)$/;"	kind:function	line:56	language:C++	scope:class:Callbacks	typeref:typename:void	signature:(uint64_t seq_no,std::span<uint8_t const> data)	roles:def	end:61
tls_record_received	tls.hpp	/^		void tls_record_received(uint64_t seq_no, std::span<uint8_t const> data) override;$/;"	kind:prototype	line:60	language:C++	scope:class:Callbacks	typeref:typename:void	access:public	signature:(uint64_t seq_no,std::span<uint8_t const> data)	roles:def	end:60	properties:override,virtual
tracking_table	get_free_connection_socket_index.cpp	/^static unsigned int tracking_table[FD_TABLE_SIZE \/ 2];$/;"	kind:variable	line:32	language:C++	typeref:typename:unsigned int[]	file:	roles:def	extras:fileScope	end:32	properties:static
trusted_certificate_authorities	tls.cpp	/^std::vector<Botan::Certificate_Store *> Server_Credentials::trusted_certificate_authorities(std:/;"	kind:function	line:85	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::Certificate_Store * >	signature:(std::string const & type,std::string const & context)	roles:def	end:93
trusted_certificate_authorities	tls.hpp	/^		std::vector<Botan::Certificate_Store *> trusted_certificate_authorities(std::string const &typ/;"	kind:prototype	line:83	language:C++	scope:class:Server_Credentials	typeref:typename:std::vector<Botan::Certificate_Store * >	access:public	signature:(std::string const & type,std::string const & context)	roles:def	end:84	properties:override,virtual
tsl_engien	connection_accepted.hpp	/^		Botan::TLS::Server *tsl_engien;$/;"	kind:member	line:40	language:C++	scope:struct:s_connection_data	typeref:typename:Botan::TLS::Server *	access:public	roles:def	end:40
type	tls.cpp	/^																		std::string const             &type,$/;"	kind:parameter	line:107	language:C++	scope:function:Server_Credentials::private_key_for	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:1
type	tls.cpp	/^								   std::string const &type, std::string const &context)$/;"	kind:parameter	line:98	language:C++	scope:function:Server_Credentials::cert_chain	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:2
type	tls.cpp	/^std::vector<Botan::Certificate_Store *> Server_Credentials::trusted_certificate_authorities(std:/;"	kind:parameter	line:85	language:C++	scope:function:Server_Credentials::trusted_certificate_authorities	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:0
type	tls.hpp	/^															std::string const             &type,$/;"	kind:parameter	line:90	language:C++	scope:prototype:Server_Credentials::private_key_for	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:1
type	tls.hpp	/^											std::string const                             &type,$/;"	kind:parameter	line:87	language:C++	scope:prototype:Server_Credentials::cert_chain	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:2
type	tls.hpp	/^		std::vector<Botan::Certificate_Store *> trusted_certificate_authorities(std::string const &typ/;"	kind:parameter	line:83	language:C++	scope:prototype:Server_Credentials::trusted_certificate_authorities	typeref:typename:std::string const &	file:	roles:def	extras:fileScope	nth:0
unistd.h	main.cpp	/^#include <unistd.h>/;"	kind:header	line:24	language:C++	roles:system	extras:reference
vector	start_server.cpp	/^	struct iovec    vector;$/;"	kind:local	line:120	language:C++	scope:function:start_server	typeref:struct:iovec	file:	roles:def	extras:fileScope	end:120
worker_id	check_for_errors.cpp	/^void check_for_errors_worker(char const *str, t_s_worker_id worker_id)$/;"	kind:parameter	line:45	language:C++	scope:function:check_for_errors_worker	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:1
worker_id	connection_accepted.hpp	/^		t_s_worker_id          worker_id;$/;"	kind:member	line:55	language:C++	scope:struct:s_connection_accepted_data	typeref:typename:t_s_worker_id	access:public	roles:def	end:55
worker_id	main.cpp	/^	t_s_worker_id worker_id = {.port = port};$/;"	kind:local	line:69	language:C++	scope:function:lauch_workers_for_port	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	end:69
worker_id	start_server.cpp	/^static void check_for_completions_and_make_callbacks(struct io_uring *ring, t_s_worker_id worker/;"	kind:parameter	line:85	language:C++	scope:function:check_for_completions_and_make_callbacks	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:1
worker_id	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:parameter	line:104	language:C++	scope:prototype:enter_loop	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:0
worker_id	start_server.cpp	/^static void enter_loop(t_s_worker_id worker_id, t_s_server_config_list server_config_list, struc/;"	kind:parameter	line:107	language:C++	scope:function:enter_loop	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:0
worker_id	start_server.cpp	/^static void issue_accept_if_needed(struct io_uring *ring, int listening_fd, t_s_worker_id worker/;"	kind:parameter	line:51	language:C++	scope:function:issue_accept_if_needed	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:2
worker_id	start_server.cpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:parameter	line:117	language:C++	scope:function:start_server	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:0
worker_id	start_server.hpp	/^void start_server(t_s_worker_id worker_id, t_s_server_config_list server_config_list, int listen/;"	kind:parameter	line:68	language:C++	scope:prototype:start_server	typeref:typename:t_s_worker_id	file:	roles:def	extras:fileScope	nth:0
worker_num	start_server.hpp	/^		unsigned int worker_num;$/;"	kind:member	line:39	language:C++	scope:struct:s_worker_id	typeref:typename:unsigned int	access:public	roles:def	end:39
worker_number	main.cpp	/^static void lauch_workers_for_port(uint16_t port, unsigned int worker_number, t_s_server_config /;"	kind:parameter	line:62	language:C++	scope:function:lauch_workers_for_port	typeref:typename:unsigned int	file:	roles:def	extras:fileScope	nth:1
